<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">
	<bean class="org.awda.middleware.util.KillRoute" id="killRoute" scope="singleton" />
	<bean class="org.awda.middleware.util.GenerateSignature" id="genSign" scope="singleton" />
	<bean class="org.awda.middleware.util.MessageValidator" id="payloadValidator" scope="singleton" />
	<bean class="org.awda.middleware.util.GeneratePayload" id="generatePayload" />
	<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSourceHana">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://${postgre.host}:${postgre.port}/${postgre.db}?useTimezone=true&amp;serverTimezone=UTC" />
		<property name="username" value="${postgre.user}" />
		<property name="password" value="${postgre.password}" />
	</bean>
	<!-- import routeBS.xml-->
	<import resource="routeBS7.xml" />
	<import resource="routeBS8.xml" />
	<import resource="routeBS9.xml" />
	<import resource="routeBS10.xml" />
	<import resource="routeBS11.xml" />
	<import resource="routeBS12.xml" />
	<import resource="routeBS13.xml" />
	<import resource="routeBS14.xml" />
	<import resource="routeBS15.xml" />
	<import resource="routeBS16.xml" />
	<import resource="routeBS17.xml" />
	<import resource="routeBS18.xml" />
	<import resource="routeBS19.xml" />
	<import resource="routeBS20.xml" />
	<import resource="routeBS21.xml" />
	<import resource="routeBS22.xml" />
	<import resource="routeBS23.xml" />
	<import resource="routeBS24.xml" />
	<import resource="routeBS25.xml" />
	<import resource="routeBS26.xml" />
	<camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
		<!-- reference routeBS depend on routeContext id="routeBS7" on routeBS.xml-->
		<routeContextRef ref="routeBS7_RegOrLogin" />
		<routeContextRef ref="routeBS8_EligibleCheck" />
		<routeContextRef ref="routeBS9_CreateOrder" />
		<routeContextRef ref="routeBS10_SignPage" />
		<routeContextRef ref="routeBS11_RepaymentNotice" />
		<routeContextRef ref="routeBS12_QueryOrderStatus" />
		<routeContextRef ref="routeBS13_LimitInfo" />
		<routeContextRef ref="routeBS14_MaxLimit" />
		<routeContextRef ref="routeBS15_UserStatus" />
		<routeContextRef ref="routeBS16_Loans" />
		<routeContextRef ref="routeBS17_CancelOrder" />
		<routeContextRef ref="routeBS18_ConfirmOrder" />
		<routeContextRef ref="routeBS19_PlProductList" />
		<routeContextRef ref="routeBS20_MerchantAmountCheck" />
		<routeContextRef ref="routeBS21_QueryMerchantGoods" />
		<routeContextRef ref="routeBS22_Banks" />
		<routeContextRef ref="routebs23_CreateMerchant" />
		<routeContextRef ref="routebs24_UpdateMerchant" />
		<routeContextRef ref="routebs25_CreateProduct" />
		<routeContextRef ref="routebs26_UpdateProduct" />
		<dataFormats>
			<json allowJmsType="true" allowUnmarshallType="true" contentTypeHeader="false" enableJaxbAnnotationModule="false" id="bsRegLog_dataformat" library="Jackson" prettyPrint="false" unmarshalTypeName="org.awda.middleware.pojo.RegLog" useDefaultObjectMapper="true" useList="false" />
			<json allowJmsType="false" allowUnmarshallType="false" contentTypeHeader="false" enableJaxbAnnotationModule="false" id="jackson" library="Jackson" prettyPrint="false" useDefaultObjectMapper="true" useList="false" />
		</dataFormats>
		<restConfiguration bindingMode="off" component="jetty" contextPath="/" host="0.0.0.0" port="9090" />
		<rest id="rest-82871616-cbc5-4dd8-8554-1d8c03e8246f">
			<post bindingMode="json" consumes="application/json" id="post-c911745f-aeba-4fae-8a53-fcb958c4e455" produces="application/json" type="org.awda.middleware.pojo.UpdateProductBody" uri="/updateProduct">
				<route>
					<to uri="bean-validator:updateProduct" />
					<doTry id="_doTry26">
						<to uri="direct:bs_26" />
						<doCatch id="_doCatch26">
							<exception>java.io.IOException</exception>
							<log id="co_log26" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader26">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo26" type="java.lang.String" />
							<setBody id="co_setBody26">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error test merge ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="post-83747d37-b397-406c-8dae-29488dbe6cd6" produces="application/json" type="org.awda.middleware.pojo.CreateProductBody" uri="/createProduct">
				<route>
					<to uri="bean-validator:createProduct" />
					<doTry id="_doTry25">
						<to uri="direct:bs_25" />
						<doCatch id="_doCatch25">
							<exception>java.io.IOException</exception>
							<log id="co_log25" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader25">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo25" type="java.lang.String" />
							<setBody id="co_setBody25">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="post-bb55b78f-8fa9-4e44-b511-a7558b1eb848" produces="application/json" type="org.awda.middleware.pojo.UpdateMerchantBody" uri="/updateMerchant">
				<route>
					<to uri="bean-validator:updateMerchant" />
					<doTry id="_doTry24">
						<to uri="direct:bs_24" />
						<doCatch id="_doCatch24">
							<exception>java.io.IOException</exception>
							<log id="co_log24" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader24">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo24" type="java.lang.String" />
							<setBody id="co_setBody24">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="post-aada0a40-3f41-4f65-a8ec-4eea956d5c45" produces="application/json" type="org.awda.middleware.pojo.CreateMerchantBody" uri="/createMerchant">
				<route>
					<to uri="bean-validator:createMerchant" />
					<doTry id="_doTry23">
						<to uri="direct:bs_23" />
						<doCatch id="_doCatch23">
							<exception>java.io.IOException</exception>
							<log id="co_log23" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader23">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo23" type="java.lang.String" />
							<setBody id="co_setBody23">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="c442465b-34a7-48f6-96c8-801e4d8c8bdc" produces="application/json" type="org.awda.middleware.pojo.Body" uri="/banks">
				<route>
					<to uri="bean-validator:banks" />
					<doTry id="_doTry22">
						<to uri="direct:bs_22" />
						<doCatch id="_doCatch22">
							<exception>java.io.IOException</exception>
							<log id="co_log22" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader22">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo22" type="java.lang.String" />
							<setBody id="co_setBody22">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="7706defc-f38b-454e-a0cc-35f5ce2adb8f" produces="application/json" type="org.awda.middleware.pojo.QueryMerchantGoodsBody" uri="/queryMerchantGoods">
				<route>
					<to uri="bean-validator:queryMerchantGoods" />
					<doTry id="_doTry21">
						<to uri="direct:bs_21" />
						<doCatch id="_doCatch21">
							<exception>java.io.IOException</exception>
							<log id="co_log21" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader21">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo21" type="java.lang.String" />
							<setBody id="co_setBody21">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="b683cf4d-7a1c-49b6-a2bc-d5b39d0fb04c" produces="application/json" type="org.awda.middleware.pojo.MerchantAmountCheckBody" uri="/merchantAmountCheck">
				<route>
					<to uri="bean-validator:merchantAmountCheck" />
					<doTry id="_doTry20">
						<to uri="direct:bs_20" />
						<doCatch id="_doCatch20">
							<exception>java.io.IOException</exception>
							<log id="co_log20" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader20">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo20" type="java.lang.String" />
							<setBody id="co_setBody20">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="e7c36ce1-d5f1-458c-a7a0-35c4aa3b9151" produces="application/json" type="org.awda.middleware.pojo.Body" uri="/plProductList">
				<route>
					<to uri="bean-validator:plProductList" />
					<doTry id="_doTry19">
						<to uri="direct:bs_19" />
						<doCatch id="_doCatch19">
							<exception>java.io.IOException</exception>
							<log id="co_log19" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader19">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo19" type="java.lang.String" />
							<setBody id="co_setBody19">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="ef64da44-5f6e-462a-8d77-c05fe9a8c1b8" produces="application/json" type="org.awda.middleware.pojo.ConfirmOrderBody" uri="/confirmOrder">
				<route>
					<to uri="bean-validator:confirmOrder" />
					<doTry id="_doTry18">
						<to uri="direct:bs_18" />
						<doCatch id="_doCatch18">
							<exception>java.io.IOException</exception>
							<log id="co_log18" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader18">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo18" type="java.lang.String" />
							<setBody id="co_setBody18">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="480d1d4c-34d8-459d-8978-b563a2ffa8ed" produces="application/json" type="org.awda.middleware.pojo.CancelOrderBody" uri="/cancelOrder">
				<route>
					<to uri="bean-validator:cancelOrder" />
					<doTry id="_doTry17">
						<to uri="direct:bs_17" />
						<doCatch id="_doCatch17">
							<exception>java.io.IOException</exception>
							<log id="co_log17" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader17">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo17" type="java.lang.String" />
							<setBody id="co_setBody17">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="21804c87-a4c2-4e52-bca9-c11b106adf2e" produces="application/json" type="org.awda.middleware.pojo.LoansBody" uri="/loans">
				<route>
					<to uri="bean-validator:loans" />
					<doTry id="_doTry16">
						<to uri="direct:bs_16" />
						<doCatch id="_doCatch16">
							<exception>java.io.IOException</exception>
							<log id="co_log16" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader16">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo16" type="java.lang.String" />
							<setBody id="co_setBody16">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="393b55d6-6f59-40c0-bda0-b280134b2349" produces="application/json" type="org.awda.middleware.pojo.Body" uri="/userStatus">
				<route>
					<to uri="bean-validator:userStatus" />
					<doTry id="_doTry15">
						<to uri="direct:bs_15" />
						<doCatch id="_doCatch15">
							<exception>java.io.IOException</exception>
							<log id="co_log15" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader15">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo15" type="java.lang.String" />
							<setBody id="co_setBody15">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="e4fdc923-4518-456b-9f96-9e62f1f6236d" produces="application/json" type="org.awda.middleware.pojo.Body" uri="/maxLimit">
				<route>
					<to uri="bean-validator:maxLimit" />
					<doTry id="_doTry14">
						<to uri="direct:bs_14" />
						<doCatch id="_doCatch14">
							<exception>java.io.IOException</exception>
							<log id="co_log14" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader14">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo14" type="java.lang.String" />
							<setBody id="co_setBody14">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="3d9c3582-08cf-488b-8e39-5531b379e303" produces="application/json" type="org.awda.middleware.pojo.Body" uri="/limitInfo">
				<route>
					<to uri="bean-validator:limitInfo" />
					<doTry id="_doTry13">
						<to uri="direct:bs_13" />
						<doCatch id="_doCatch13">
							<exception>java.io.IOException</exception>
							<log id="co_log13" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader13">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo13" type="java.lang.String" />
							<setBody id="co_setBody13">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="81082d99-7c59-4c26-adc6-b31666c96edf" produces="application/json" type="org.awda.middleware.pojo.Body" uri="/queryOrderStatus">
				<route>
					<to uri="bean-validator:queryOrderStatus" />
					<doTry id="_doTry12">
						<to uri="direct:bs_12" />
						<doCatch id="_doCatch12">
							<exception>java.io.IOException</exception>
							<log id="co_log12" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader12">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo12" type="java.lang.String" />
							<setBody id="co_setBody12">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="8436ea42-6819-402d-ad78-d8b5b2e7e843" produces="application/json" type="org.awda.middleware.dto.RepaymentNoticeDTO" uri="/repaymentNotice">
				<route>
					<to uri="bean-validator:repaymentNotice" />
					<doTry id="_doTry11">
						<to uri="direct:bs_11" />
						<doCatch id="_doCatch11">
							<exception>java.io.IOException</exception>
							<log id="co_log11" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader11">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo11" type="java.lang.String" />
							<setBody id="co_setBody11">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="4bd9b266-a9c0-4386-8648-7dd0fe90b970" produces="application/json" type="org.awda.middleware.pojo.SignPageBody" uri="/signPage">
				<route>
					<to uri="bean-validator:signPage" />
					<doTry id="_doTry10">
						<to uri="direct:bs_10" />
						<doCatch id="_doCatch10">
							<exception>java.io.IOException</exception>
							<log id="co_log10" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader10">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo10" type="java.lang.String" />
							<setBody id="co_setBody10">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="d70c72a5-7f9d-4aa3-8784-5f43eaf86cb4" produces="application/json" type="org.awda.middleware.pojo.CreateOrderBody" uri="/createOrder">
				<route>
					<to uri="bean-validator:createOrderBody" />
					<doTry id="_doTry9">
						<to uri="direct:bs_9" />
						<doCatch id="_doCatch9">
							<exception>java.io.IOException</exception>
							<log id="co_log9" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader9">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo9" type="java.lang.String" />
							<setBody id="co_setBody9">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="39253b1e-e8d2-45b6-8fcf-bc5e2c98ddff" produces="application/json" type="org.awda.middleware.pojo.EligibleCheckBody" uri="/eligibleCheck">
				<route>
					<to uri="bean-validator:eligibleCheck" />
					<doTry id="_doTry8">
						<to uri="direct:bs_8" />
						<doCatch id="_doCatch8">
							<exception>java.io.IOException</exception>
							<log id="co_log8" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader8">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo8" type="java.lang.String" />
							<setBody id="co_setBody8">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
			<post bindingMode="json" consumes="application/json" id="69ad8ef4-de07-4844-8a02-ac862035380f" produces="application/json" type="org.awda.middleware.pojo.RegLogBody" uri="/regOrLogin">
				<route>
					<to uri="bean-validator:regOrLogin" />
					<doTry id="_doTry7">
						<to uri="direct:bs_7" />
						<doCatch id="_doCatch7">
							<exception>java.io.IOException</exception>
							<log id="co_log7" message="Error Message : ${exception.message}, Body : ${body}" />
							<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader7">
								<constant>500</constant>
							</setHeader>
							<convertBodyTo id="_convertBodyTo7" type="java.lang.String" />
							<setBody id="co_setBody7">
								<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
							</setBody>
						</doCatch>
					</doTry>
					<onException>
						<exception>com.fasterxml.jackson.core.JsonParseException</exception>
						<exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
						<exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
						<exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
						<exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
						<handled>
							<constant>true</constant>
						</handled>
						<transform>
							<simple>{
									    "code": 422,
									    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
									    "result": "Failed"
									}
									</simple>
						</transform>
						<setHeader headerName="CamelHttpResponseCode">
							<constant>422</constant>
						</setHeader>
					</onException>
				</route>
			</post>
		</rest>
		<route id="_gen_sign">
			<from id="_from31" uri="direct:gen_sign" />
			<process id="_init_strategy_gen_sign" ref="killRoute" />
			<throttle id="_throttle1" timePeriodMillis="100">
				<constant>1</constant>
				<bean id="_bean1" method="process('input')" ref="genSign" />
			</throttle>
		</route>
		<route id="_gen_log">
			<from id="_from2" uri="direct:gen_log" />
			<process id="_init_strategy_gen_log" ref="killRoute" />
			<!--log id="_log1" message="Timestamp : ${date:now:yyyy-MM-dd HH:mm:ss} , Signature : ${exchangeProperty.signature}"/>-->
			<doTry id="_doTry1">
				<toD id="_to3" uri="sql:insert into {{postgre.audit.table}} values ('${exchangeProperty.signature}','${body}','','${date:now:yyyy-MM-dd HH:mm:ss}')" />
				<doCatch id="_doCatch1">
					<exception>org.springframework.jdbc.CannotGetJdbcConnectionException</exception>
					<exception>org.apache.camel.component.sql.SqlComponent</exception>
					<exception>java.sql.SQLException</exception>
					<log id="co_log1" message="Error Message : ${exception.message}" />
					<setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader1">
						<constant>500</constant>
					</setHeader>
					<convertBodyTo id="_convertBodyTo1" type="java.lang.String" />
					<setBody id="co_setBody1">
						<simple>{
								    "code": 500,
								    "message": "Internal Server Error ",
								    "result": "Failed"
									}</simple>
					</setBody>
				</doCatch>
			</doTry>
		</route>
	</camelContext>
</beans>
